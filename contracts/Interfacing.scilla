scilla_version 0

library Interfacing
type AB = | A | B (* The test ADT *)

contract Interfacing()

(* transition with user defined ADT argument *)
transition ABTest(v: AB)
  ev = {_eventname: "ABTest"; value : v};
  event ev
end

(* transition with List argument *)
transition ListTest(list: List String)
  ev = {_eventname: "ListTest"; list: list};
  event ev
end

(* transition with Option argumen *)
transition OptionTest(option: Option Uint32)
  ev = {_eventname: "OptionTest"; option: option };
  event ev
end

(* transition with Pair (Uint32, String) argument *)
transition PairTest(pair: Pair Uint32 String)
  ev = {_eventname: "PairTest"; pair: pair };
  event ev
end

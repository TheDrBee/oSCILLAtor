scilla_version 0
(***************************************************)
(* call transition get_value() of another contract *)
(* "Callee" and get called back in value_callback()*)
(***************************************************)
library Caller
let zero = Uint128 0
(* Wrap single message into singleton list *)
let one_msg =
  fun (msg : Message) =>
    let nil_msg = Nil {Message} in
    Cons {Message} msg nil_msg

(***************************************************)
contract Caller
( init_callee : ByStr20 )

field callee: ByStr20 = init_callee
field value: Uint128 = Uint128 0

(* calls the callee and ask to call back with value *)
transition call_for_value()
  to <- callee;
  msg = {_tag : "get_value"; _recipient : to; _amount : zero};
  msgs = one_msg msg;
  send msgs
end
(* callback called by callee with value v *)
transition value_callback(v : Uint128)
  value := v;
  e = {_eventname : "value_callback()"; new_value : v};
  event e
end
